@model JCL_Web.Models.Usuario
@{
    ViewBag.Title = "Usuário";
}

@Html.AntiForgeryToken()
<body>


    @using (Html.BeginForm())
    {


        <div class="form-horizontal">

            <div class="title">
                @if (Session["tipo_usuario"].ToString().Equals("gerente"))
                {
                    <h2>Registrar Usuário</h2>
                }
                else
                {
                    <h2>Registrar Cliente</h2>
                }
            </div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="formulario">
                <div class="form-group">
                    @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <i class="far fa-user"></i>
                        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", Type = "text", Required = "true" } })
                        @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <i class="fa fa-envelope"></i>
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", Type = "text", Required = "true" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <i class="fas fa-phone-alt"></i>
                        @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control", Type = "text", Required = "true", id = "tel", maxlength = "15", placeholder = "(00) 00000-0000" } })
                        @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Endereco, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <i class="fas fa-map-marker-alt"></i>
                        @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control", Type = "text", Required = "true" } })
                        @Html.ValidationMessageFor(model => model.Endereco, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Regiao, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Regiao, new { htmlAttributes = new { @class = "form-control3", Required = "true", type = "text" } })
                        @Html.ValidationMessageFor(model => model.Regiao, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Cadastrar"
                               class="btn btn-default" href="~/Views/Usuario/MostraUsuario.cshtml" />
                    </div>
                </div>

            </div>
        </div>
    }
</body>

<script>
    const tel = document.getElementById('tel') // Seletor do campo de telefone
    tel.addEventListener('keypress', (e) => mascaraTelefone(e.target.value)) // Dispara quando digitado no campo
    tel.addEventListener('change', (e) => mascaraTelefone(e.target.value)) // Dispara quando autocompletado o campo

    const mascaraTelefone = (valor) => {
        valor = valor.replace(/\D/g, "")
        valor = valor.replace(/^(\d{2})(\d)/g, "($1) $2")
        valor = valor.replace(/(\d)(\d{4})$/, "$1-$2")
        tel.value = valor // Insere o(s) valor(es) no campo
    }
</script>

<style>
    body {
        background-color: #F2F0F0;
    }

    .form-horizontal {
        align-content: center;
        margin-top: 80px;
        border: 1px solid #C0C0C0;
        width: 100%;
        border-radius: 15px;
        position: relative;
        background-color: white;
        border: 0;
        box-shadow: 5px 12px 32px #888888;
    }

    .title {
        background-color: #BA1D1D;
        position: relative;
        height: 50px;
        width: 100%;
    }

    .formulario {
        margin-top: 30px;
        margin-left: 20px;
    }

    i {
        margin-top: 10px;
    }

    .col-md-10 {
        display: flex;
        color: grey;
    }

    h2 {
        font-size: 28px;
        color: white;
        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
        ;
        font-weight: bold;
        text-align: left;
        margin-left: 20px;
        padding-bottom: 30px;
        padding-top: 16px;
    }

    .form-control {
        width: 500px;
        background-color: transparent;
        border: none;
        border-bottom: 1px solid grey;
    }

    .form-control2 {
        width: 100px;
        background-color: transparent;
        border: none;
        border-bottom: 1px solid #C0C0C0;
    }

    .form-control3 {
        width: 80px;
        background-color: transparent;
        border: none;
        border-bottom: 1px solid grey;
    }

    label {
        color: #BA1D1D;
        position: relative;
    }

    .form-group {
        margin-top: 15px;
    }

    input[type="submit"] {
        width: 130px;
        cursor: pointer;
        background: rgb(169,169,169, 0.7);
        padding: 5px 5px;
        color: #fff;
        font-size: 18px;
        border: 1px solid #fff;
        margin-bottom: 10px;
        text-shadow: 0 1px 1px #333;
        -webkit-border-radius: 5px;
        border-radius: 5px;
        transition: all 0.2s linear;
    }

        input[type="submit"]:hover {
            color: #fff;
            background: #BA1D1D;
        }
</style>